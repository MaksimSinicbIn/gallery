@use '../../../styles/abstracts/tokens' as *;
@use '../../../styles/abstracts/fonts' as *;

.gridContainer {
  display: grid;
  gap: 30px;

  grid-auto-rows: minmax(400px, auto);

  @media (min-width: ($breakpoint-mobile + 1px)) {
    grid-template-columns: repeat(2, minmax(200px, 1fr));
    grid-auto-rows: minmax(500px, 1fr);
  }

  @media (min-width: ($breakpoint-tablet + 1px)) {
    grid-template-columns: repeat(2, minmax(300px, 450px));
    grid-auto-rows: minmax(600px, 1fr);
    justify-content: center;
  }
}

.gridItem {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  box-shadow: var(--image-shadow);
}

.textBlock {
  display: flex;
  flex-direction: column;
  justify-content: center;
  box-sizing: border-box;

  padding: 5px;

  @media (min-width: $breakpoint-tablet) {
    padding: 40px;
  }

  @media (min-width: $breakpoint-desktop) {
    padding: 40px 60px;
  }
}

.descriptionBlock {
  @extend .textBlock;
  gap: 20px;
  padding: 0;
}

.text {
  color: var(--color-text);
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
  font-size: $font-size-xl;
  font-weight: $font-weight-semibold;
}

.title {
  @extend .text;
  font-size: $font-size-xxxl;
  margin-bottom: 30px;
}

.imageLink {
  display: block;
  position: relative;
}

.imageWrapper {
  height: 100%;
}

.imageOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.5);
  color: var(--color-light-100);
  opacity: 0;
  transition: opacity $transition-duration ease;
  font-size: $font-size-l;
  font-weight: $font-weight-bold;
}

.imageWrapper:hover .imageOverlay {
  opacity: 1;
}
